<template>
  <div
    class="min-h-screen flex flex-col bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 transition-colors duration-500 relative"
  >
    <!-- Patrones de fondo mejorados - diferentes para modo claro y oscuro -->
    <div
      class="absolute inset-0 overflow-hidden pointer-events-none h-full w-full"
    >
      <!-- Pattern for light mode -->
      <svg
        width="100%"
        height="100%"
        xmlns="http://www.w3.org/2000/svg"
        class="absolute inset-0 opacity-10 dark:opacity-0 transition-opacity duration-500"
      >
        <defs>
          <pattern
            id="smallGrid"
            width="20"
            height="20"
            patternUnits="userSpaceOnUse"
          >
            <path
              d="M 20 0 L 0 0 0 20"
              fill="none"
              stroke="currentColor"
              stroke-width="0.5"
              class="text-primary-500"
            />
          </pattern>
          <pattern
            id="grid"
            width="80"
            height="80"
            patternUnits="userSpaceOnUse"
          >
            <rect width="80" height="80" fill="url(#smallGrid)" />
            <path
              d="M 80 0 L 0 0 0 80"
              fill="none"
              stroke="currentColor"
              stroke-width="1"
              class="text-primary-400"
            />
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#grid)" />
      </svg>
    </div>

    <!-- Contenido principal -->
    <div class="flex-grow flex items-center justify-center p-4 relative z-10">
      <div class="w-full max-w-md flex flex-col items-center">
        <!-- Animated CODEX text instead of logo -->
        <div class="mb-8 flex justify-center">
          <h1
            class="text-5xl font-bold tracking-wider relative overflow-hidden py-2"
          >
            <span
              class="relative z-10 text-transparent bg-clip-text gradient-text"
              >CODEX</span
            >
          </h1>
        </div>

        <!-- Card de login -->
        <div
          class="w-full bg-white dark:bg-gray-800 rounded-xl shadow-2xl overflow-hidden transition-all duration-500 border border-gray-100 dark:border-gray-700"
        >
          <!-- Barra superior con animación de gradiente -->
          <div class="h-2 gradient-bar" />

          <div class="p-8">
            <!-- Header con toggle de tema -->
            <div class="flex justify-end items-center mb-6">
              <!-- Toggle Dark/Light Mode con animación mejorada -->
              <button
                type="button"
                @click="toggleTheme"
                class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500 transition-all duration-300 theme-toggle"
                :aria-label="
                  colorMode.value === 'dark'
                    ? 'Cambiar a modo claro'
                    : 'Cambiar a modo oscuro'
                "
              >
                <div class="relative w-5 h-5">
                  <sun-icon
                    v-if="colorMode.value === 'dark'"
                    class="h-5 w-5 text-yellow-400 absolute top-0 left-0 transform rotate-0 transition-all duration-300 opacity-100 scale-100"
                  />
                  <moon-icon
                    v-else
                    class="h-5 w-5 text-indigo-600 absolute top-0 left-0 transform rotate-0 transition-all duration-300 opacity-100 scale-100"
                  />
                </div>
              </button>
            </div>

            <!-- Título -->
            <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
              Iniciar Sesión
            </h1>
            <p class="text-gray-500 dark:text-gray-400 mb-6">
              Ingresa tus credenciales para continuar
            </p>
            <div class="cuadrado"></div>
            <!-- Formulario -->
            <Form
              @submit="onSubmit"
              :validation-schema="schema"
              v-slot="{ errors, isSubmitting }"
              :initial-values="{ username: '', password: '' }"
            >
              <div class="space-y-5">
                <!-- Campo de usuario -->
                <div>
                  <label
                    for="username"
                    class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
                  >
                    Nombre de usuario
                  </label>
                  <div
                    class="flex border border-gray-300 dark:border-gray-600 rounded-lg overflow-hidden focus-within:ring-2 focus-within:ring-primary-500 focus-within:border-primary-500 transition-all duration-300"
                    :class="{
                      'ring-2 ring-red-500 border-red-500': errors.username
                    }"
                  >
                    <div
                      class="bg-gray-50 dark:bg-gray-700 px-3 py-2.5 flex items-center"
                    >
                      <user-icon
                        class="h-5 w-5 text-gray-500 dark:text-gray-400"
                      />
                    </div>
                    <Field
                      id="username"
                      name="username"
                      type="text"
                      placeholder="Nombre de Usuario"
                      class="flex-grow px-3 py-2.5 focus:outline-none bg-white dark:bg-gray-800 text-gray-900 dark:text-white transition-colors duration-300"
                    />
                  </div>
                  <span
                    v-if="errors.username"
                    class="text-xs text-red-500 dark:text-red-400 mt-1 block"
                    >{{ errors.username }}</span
                  >
                </div>

                <!-- Campo de contraseña -->
                <div>
                  <label
                    for="password"
                    class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
                  >
                    Contraseña
                  </label>
                  <div
                    class="flex border border-gray-300 dark:border-gray-600 rounded-lg overflow-hidden focus-within:ring-2 focus-within:ring-primary-500 focus-within:border-primary-500 transition-all duration-300"
                    :class="{
                      'ring-2 ring-red-500 border-red-500': errors.password
                    }"
                  >
                    <div
                      class="bg-gray-50 dark:bg-gray-700 px-3 py-2.5 flex items-center"
                    >
                      <lock-icon
                        class="h-5 w-5 text-gray-500 dark:text-gray-400"
                      />
                    </div>
                    <Field
                      id="password"
                      name="password"
                      :type="showPassword ? 'text' : 'password'"
                      placeholder="Contraseña"
                      class="flex-grow px-3 py-2.5 focus:outline-none bg-white dark:bg-gray-800 text-gray-900 dark:text-white transition-colors duration-300"
                    />
                    <button
                      type="button"
                      @click="showPassword = !showPassword"
                      class="px-3 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-300"
                      :aria-label="
                        showPassword
                          ? 'Ocultar contraseña'
                          : 'Mostrar contraseña'
                      "
                    >
                      <eye-icon
                        v-if="showPassword"
                        class="h-5 w-5 text-gray-500 dark:text-gray-400"
                      />
                      <eye-off-icon
                        v-else
                        class="h-5 w-5 text-gray-500 dark:text-gray-400"
                      />
                    </button>
                  </div>
                  <span
                    v-if="errors.password"
                    class="text-xs text-red-500 dark:text-red-400 mt-1 block"
                    >{{ errors.password }}</span
                  >
                </div>

                <!-- Recordar sesión y enlace de ayuda -->
                <div class="flex justify-between items-center">
                  <label class="flex items-center space-x-3 custom-checkbox">
                    <div class="relative">
                      <input
                        type="checkbox"
                        v-model="rememberMe"
                        class="sr-only"
                      />
                      <div
                        class="checkbox-bg w-5 h-5 border-2 border-gray-300 dark:border-gray-600 rounded transition-colors duration-200 flex items-center justify-center"
                        :class="{
                          'bg-primary-500 border-primary-500 dark:bg-primary-600 dark:border-primary-600':
                            rememberMe
                        }"
                      >
                        <svg
                          class="w-3 h-3 text-white"
                          :class="{
                            'opacity-100': rememberMe,
                            'opacity-0': !rememberMe
                          }"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="3"
                            d="M5 13l4 4L19 7"
                          ></path>
                        </svg>
                      </div>
                    </div>
                    <span
                      class="text-sm text-gray-600 dark:text-gray-300 select-none"
                    >
                      Recordarme
                    </span>
                  </label>
                  <a
                    href="#"
                    class="text-sm text-primary-600 dark:text-primary-400 hover:underline transition-colors duration-300"
                    >¿Necesitas ayuda?</a
                  >
                </div>

                <!-- Botón de login con animación -->
                <button
                  type="submit"
                  class="w-full py-2.5 px-4 bg-primary-600 hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800 text-white font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-opacity-50 transition-all duration-300 flex items-center justify-center login-button"
                  :disabled="isSubmitting"
                >
                  <loader-icon
                    v-if="isSubmitting"
                    class="animate-spin h-5 w-5 mr-2"
                  />
                  Iniciar Sesión
                </button>

                <!-- Separador -->
                <div class="relative my-6">
                  <div class="absolute inset-0 flex items-center">
                    <div
                      class="w-full border-t border-gray-300 dark:border-gray-600"
                    ></div>
                  </div>
                  <div class="relative flex justify-center text-sm">
                    <span
                      class="px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400"
                    >
                      o contáctanos vía
                    </span>
                  </div>
                </div>

                <!-- Botones de contacto -->
                <div class="grid grid-cols-2 gap-3">
                  <a
                    href="mailto:contact@synergy.com"
                    class="py-2.5 px-4 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-opacity-50 transition-all duration-300 flex items-center justify-center contact-button"
                  >
                    <mail-icon class="h-5 w-5 mr-2 text-red-500" />
                    <span class="text-sm">Gmail</span>
                  </a>
                  <a
                    href="https://wa.me/1234567890"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="py-2.5 px-4 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-opacity-50 transition-all duration-300 flex items-center justify-center contact-button"
                  >
                    <message-circle-icon class="h-5 w-5 mr-2 text-green-500" />
                    <span class="text-sm">WhatsApp</span>
                  </a>
                </div>

                <!-- Enlace para crear cuenta -->
                <div
                  class="text-center text-sm text-gray-600 dark:text-gray-300 transition-colors duration-300 mt-4"
                >
                  ¿No tienes una cuenta?
                  <a
                    href="#"
                    class="text-primary-600 dark:text-primary-400 hover:underline transition-colors duration-300 font-medium"
                    >Prueba la versión gratuita</a
                  >
                </div>
              </div>
            </Form>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer
      class="py-4 px-6 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 transition-colors duration-300 relative z-10"
    >
      <div class="container mx-auto">
        <div
          class="flex flex-col md:flex-row flex-wrap justify-center md:justify-between items-center text-sm text-gray-600 dark:text-gray-300 gap-y-4 transition-colors duration-300"
        >
          <div class="flex items-center space-x-2">
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 flex items-center transition-colors duration-300"
            >
              SynergySoft.com
              <external-link-icon class="h-4 w-4 ml-1" />
            </a>
          </div>

          <div class="flex flex-wrap justify-center gap-x-4 gap-y-2">
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300"
              >Galileo</a
            >
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300"
              >Gestión de almacenes</a
            >
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 flex items-center transition-colors duration-300"
            >
              Codex Mobile
              <span class="ml-1 flex">
                <apple-icon class="h-4 w-4 text-gray-600 dark:text-gray-400" />
                <smartphone-icon
                  class="h-4 w-4 ml-1 text-gray-600 dark:text-gray-400"
                />
              </span>
            </a>
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 flex items-center transition-colors duration-300"
            >
              Galileo Mobile
              <span class="ml-1 flex">
                <apple-icon class="h-4 w-4 text-gray-600 dark:text-gray-400" />
                <smartphone-icon
                  class="h-4 w-4 ml-1 text-gray-600 dark:text-gray-400"
                />
              </span>
            </a>
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 flex items-center transition-colors duration-300"
            >
              Codex
              <span
                class="ml-1 text-xs bg-primary-600 dark:bg-primary-700 text-white px-1.5 py-0.5 rounded-full"
                >NUEVO</span
              >
            </a>
          </div>

          <div class="flex flex-wrap justify-center gap-x-2">
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300"
              >Contáctanos</a
            >
            <span class="text-gray-400 dark:text-gray-500">|</span>
            <a
              href="#"
              class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300"
              >Sobre nuestra Plataforma</a
            >
          </div>
        </div>
      </div>
    </footer>
  </div>
</template>

<script setup lang="ts">
import { ref, computed, defineComponent, h } from 'vue'
import { Form, Field } from 'vee-validate'
import { toTypedSchema } from '@vee-validate/zod'
import { z } from 'zod'
import { useAuthStore } from '~/stores/auth'
import {
  User as UserIcon,
  Lock as LockIcon,
  Eye as EyeIcon,
  EyeOff as EyeOffIcon,
  Sun as SunIcon,
  Moon as MoonIcon,
  ExternalLink as ExternalLinkIcon,
  Smartphone as SmartphoneIcon,
  Loader as LoaderIcon,
  Mail as MailIcon,
  MessageCircle as MessageCircleIcon
} from 'lucide-vue-next'
import { Apple as AppleIcon } from 'lucide-vue-next'

// Estado y configuración
const authStore = useAuthStore()
const colorMode = useColorMode()
const showPassword = ref(false)
const rememberMe = ref(false)
// Eliminamos la referencia a language ya que trabajaremos solo en español

// Función para cambiar el tema con animación
const toggleTheme = () => {
  // Añadir clase para la animación
  document.body.classList.add('theme-transition')

  // Cambiar el tema
  colorMode.preference = colorMode.value === 'dark' ? 'light' : 'dark'

  // Eliminar la clase después de la transición
  setTimeout(() => {
    document.body.classList.remove('theme-transition')
  }, 500)
}

// Esquema de validación en español
const schema = computed(() => {
  return toTypedSchema(
    z.object({
      username: z.string().min(1, 'El nombre de usuario es requerido'),
      password: z
        .string()
        .min(1, 'La contraseña es requerida')
        .min(5, 'La contraseña debe tener al menos 6 caracteres')
    })
  )
})

// Función para manejar el envío del formulario
const onSubmit = async (values: any) => {
  try {
    // Simulamos un tiempo de carga
    await new Promise((resolve) => setTimeout(resolve, 1000))

    // Añadimos el estado de "recordarme"
    const loginData = {
      ...values,
      rememberMe: rememberMe.value
    }

    await authStore.login(loginData)

    // Mostrar notificación de éxito (si tienes un sistema de notificaciones)
    // toast.success('Inicio de sesión exitoso');
  } catch (error) {
    console.error('Error al iniciar sesión:', error)

    // Mostrar notificación de error (si tienes un sistema de notificaciones)
    // toast.error('Error al iniciar sesión');
  }
}
</script>

<style>
/* Animación para la barra de gradiente */
@keyframes gradientMove {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.gradient-bar {
  background: linear-gradient(
    90deg,
    var(--primary-400),
    var(--primary-600),
    var(--primary-800),
    var(--primary-600),
    var(--primary-400)
  );
  background-size: 200% 200%;
  animation: gradientMove 5s ease infinite;
}

/* Animación para el texto CODEX */
.gradient-text {
  background: linear-gradient(
    90deg,
    var(--primary-400),
    var(--primary-600),
    var(--primary-800),
    var(--primary-600),
    var(--primary-400)
  );
  background-size: 200% 200%;
  animation: gradientMove 5s ease infinite;
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  font-weight: 800;
  letter-spacing: 0.1em;
  text-shadow: 0 0 5px rgba(var(--color-primary-500), 0.3);
}

/* Neon effects for dark mode */
.neon-line {
  background: linear-gradient(
    90deg,
    rgba(var(--color-primary-400), 0),
    rgba(var(--color-primary-500), 0.8),
    rgba(var(--color-primary-400), 0)
  );
  animation: neonPulse 3s ease-in-out infinite;
  box-shadow: 0 0 8px rgba(var(--color-primary-500), 0.8);
}

.neon-dot {
  background-color: rgba(var(--color-primary-500), 0.8);
  box-shadow:
    0 0 5px rgba(var(--color-primary-500), 0.8),
    0 0 10px rgba(var(--color-primary-500), 0.5),
    0 0 15px rgba(var(--color-primary-500), 0.3);
  animation: neonDotPulse 2s ease-in-out infinite;
}

@keyframes neonPulse {
  0% {
    opacity: 0.3;
    box-shadow: 0 0 5px rgba(var(--color-primary-500), 0.5);
  }
  50% {
    opacity: 0.8;
    box-shadow: 0 0 10px rgba(var(--color-primary-500), 0.8);
  }
  100% {
    opacity: 0.3;
    box-shadow: 0 0 5px rgba(var(--color-primary-500), 0.5);
  }
}

@keyframes neonDotPulse {
  0% {
    transform: scale(0.8);
    opacity: 0.3;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.8;
  }
  100% {
    transform: scale(0.8);
    opacity: 0.3;
  }
}

/* Dark mode text glow effect */
.dark .gradient-text {
  text-shadow:
    0 0 5px rgba(var(--color-primary-500), 0.5),
    0 0 10px rgba(var(--color-primary-500), 0.3),
    0 0 15px rgba(var(--color-primary-500), 0.1);
  animation: textGlow 3s ease-in-out infinite;
}

@keyframes textGlow {
  0% {
    text-shadow:
      0 0 5px rgba(var(--color-primary-500), 0.5),
      0 0 10px rgba(var(--color-primary-500), 0.3);
  }
  50% {
    text-shadow:
      0 0 10px rgba(var(--color-primary-500), 0.8),
      0 0 20px rgba(var(--color-primary-500), 0.5),
      0 0 30px rgba(var(--color-primary-500), 0.3);
  }
  100% {
    text-shadow:
      0 0 5px rgba(var(--color-primary-500), 0.5),
      0 0 10px rgba(var(--color-primary-500), 0.3);
  }
}

/* Animación para el botón de login */
@keyframes buttonGlow {
  0% {
    box-shadow: 0 0 5px rgba(var(--color-primary-500), 0.5);
  }
  50% {
    box-shadow: 0 0 15px rgba(var(--color-primary-500), 0.8);
  }
  100% {
    box-shadow: 0 0 5px rgba(var(--color-primary-500), 0.5);
  }
}

.login-button:hover {
  animation: buttonGlow 1.5s infinite;
}

/* Animación para los botones de contacto */
.contact-button {
  transition: all 0.3s ease;
}

.contact-button:hover {
  transform: translateY(-3px);
  box-shadow:
    0 7px 14px rgba(50, 50, 93, 0.1),
    0 3px 6px rgba(0, 0, 0, 0.08);
}

/* Animación para el cambio de tema */
.theme-toggle {
  overflow: hidden;
}

.theme-toggle:hover {
  transform: rotate(15deg);
}

/* Animación para la transición de tema */
.theme-transition * {
  transition:
    background-color 0.5s ease,
    color 0.5s ease,
    border-color 0.5s ease,
    box-shadow 0.5s ease !important;
}

button:focus,
a:focus,
input:focus {
  outline: 2px solid rgb(var(--color-primary-500));
  outline-offset: 2px;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

input::-ms-reveal,
input::-ms-clear {
  display: none;
}

/* Custom checkbox styles */
.custom-checkbox input[type='checkbox'] {
  /* Hide the default checkbox */
  opacity: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.custom-checkbox .checkbox-bg {
  /* Style the visual part of the checkbox */
  width: 20px;
  height: 20px;
  border: 2px solid #ccc;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition:
    background-color 0.2s,
    border-color 0.2s;
}

.custom-checkbox .checkbox-bg svg {
  /* Style the checkmark */
  width: 12px;
  height: 12px;
  fill: none;
  stroke: white;
  stroke-width: 3;
  opacity: 0;
  transition: opacity 0.2s;
}

/* When the checkbox is checked */
.custom-checkbox input[type='checkbox']:checked + .checkbox-bg {
  background-color: #4f46e5;
  border-color: #4f46e5;
}

.custom-checkbox input[type='checkbox']:checked + .checkbox-bg svg {
  opacity: 1;
}

/* Hover state */
.custom-checkbox:hover .checkbox-bg {
  border-color: #9ca3af;
}

.custom-checkbox input[type='checkbox']:checked + .checkbox-bg {
  border-color: #6366f1;
}

/* Focus state */
.custom-checkbox input[type='checkbox']:focus + .checkbox-bg {
  box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.3);
}

/* Dark mode enhancements */
.dark .neon-line {
  box-shadow:
    0 0 10px rgba(var(--color-primary-500), 0.8),
    0 0 20px rgba(var(--color-primary-500), 0.5);
}

.dark .neon-dot {
  box-shadow: 0 0 10px rgba(var(--color-primary-500), 0.8 0.5);
}

.dark .neon-dot {
  box-shadow:
    0 0 10px rgba(var(--color-primary-500), 0.8),
    0 0 20px rgba(var(--color-primary-500), 0.5),
    0 0 30px rgba(var(--color-primary-500), 0.3);
}

/* Enhanced dark mode text effects */
.dark .text-primary-600 {
  text-shadow: 0 0 8px rgba(var(--color-primary-500), 0.6);
}

/* Custom checkbox dark mode */
.dark .custom-checkbox:hover .checkbox-bg {
  border-color: rgba(var(--color-primary-500), 0.8);
}

.dark .custom-checkbox input[type='checkbox']:checked + .checkbox-bg {
  box-shadow: 0 0 10px rgba(var(--color-primary-500), 0.5);
}
</style>
